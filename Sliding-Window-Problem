//Problem link - https://www.hackerrank.com/challenges/deque-stl/problem

#include <iostream>
#include <deque> 
using namespace std;

void printKMax(int arr[], int n, int k){

 
  deque<int> Qi(k);

   int i;
  for (i = 0; i < k; ++i) {
    while ((!Qi.empty()) && arr[i] >= arr[Qi.back()])
      Qi.pop_back(); // Remove from rear

    // Add new element at rear of queue
    Qi.push_back(i);
  }

  for (; i < n; ++i) {
    cout << arr[Qi.front()] << " ";
    while ((!Qi.empty()) && Qi.front() <= i - k)
      Qi.pop_front(); // Remove from front of queue

    while ((!Qi.empty()) && arr[i] >= arr[Qi.back()])
      Qi.pop_back();

    // Add current element at the rear of Qi
    Qi.push_back(i);
  }

  // Print the maximum element of last window
  cout << arr[Qi.front()] << endl;
}

int main(){
  
	int t;
	cin >> t;
	while(t>0) {
		int n,k;
    	cin >> n >> k;
    	int i;
    	int arr[n];
    	for(i=0;i<n;i++)
      		cin >> arr[i];
    	printKMax(arr, n, k);
    	t--;
  	}
  	return 0;
}

